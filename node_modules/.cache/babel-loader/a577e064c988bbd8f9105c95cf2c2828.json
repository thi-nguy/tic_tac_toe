{"ast":null,"code":"var _jsxFileName = \"/home/thi-nguy/Documents/tic_tac_toe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Board from \"./components/Board.jsx\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const WIN_CONDITIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [1, 3]];\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xPlaying, setXPlaying] = useState(true);\n\n  const updateBoard = id => {\n    setBoard(board => {\n      const newBoard = board.map((item, index) => {\n        if (index === id) return xPlaying === true ? \"X\" : \"O\";else return item;\n      });\n      setXPlaying(!xPlaying);\n      return [...newBoard];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      board_value: board,\n      board_onClick: updateBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CA/bel2Gx32w9WCEQS/GxoRWf9Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Board","useState","App","WIN_CONDITIONS","board","setBoard","Array","fill","xPlaying","setXPlaying","updateBoard","id","newBoard","map","item","index"],"sources":["/home/thi-nguy/Documents/tic_tac_toe/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Board from \"./components/Board.jsx\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [1,3,]\n  ];\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xPlaying, setXPlaying] = useState(true);\n\n  const updateBoard = (id) => {\n    setBoard((board) => {\n      const newBoard = board.map((item, index) => {\n        if (index === id) return xPlaying === true ? \"X\" : \"O\";\n        else return item;\n      });\n      setXPlaying(!xPlaying);\n\n      return [...newBoard];\n    });\n  };\n  return (\n    <div className=\"App\">\n      <Board board_value={board} board_onClick={updateBoard} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,cAAc,GAAG,CACrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADqB,EAErB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFqB,EAGrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHqB,EAIrB,CAAC,CAAD,EAAG,CAAH,CAJqB,CAAvB;EAMA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACK,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;;EAEA,MAAMS,WAAW,GAAIC,EAAD,IAAQ;IAC1BN,QAAQ,CAAED,KAAD,IAAW;MAClB,MAAMQ,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;QAC1C,IAAIA,KAAK,KAAKJ,EAAd,EAAkB,OAAOH,QAAQ,KAAK,IAAb,GAAoB,GAApB,GAA0B,GAAjC,CAAlB,KACK,OAAOM,IAAP;MACN,CAHgB,CAAjB;MAIAL,WAAW,CAAC,CAACD,QAAF,CAAX;MAEA,OAAO,CAAC,GAAGI,QAAJ,CAAP;IACD,CARO,CAAR;EASD,CAVD;;EAWA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,KAAD;MAAO,WAAW,EAAER,KAApB;MAA2B,aAAa,EAAEM;IAA1C;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA1BQR,G;;KAAAA,G;AA4BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}