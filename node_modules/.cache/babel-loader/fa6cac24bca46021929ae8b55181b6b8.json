{"ast":null,"code":"var _jsxFileName = \"/home/thi-nguy/Documents/tic_tac_toe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Board from \"./components/Board.jsx\";\nimport ScoreBoard from \"./components/ScoreBoard.jsx\";\nimport Reset from \"./components/Reset.jsx\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const WIN_CONDITIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xPlaying, setXPlaying] = useState(true);\n  const [scores, setScores] = useState({\n    xScore: 0,\n    oScore: 0\n  });\n  const [gameOver, setGameOver] = useState(false);\n\n  const updateBoard = boxID => {\n    setBoard(board => {\n      const boardCopy = board.map((item, index) => {\n        if (index === boxID) return xPlaying === true ? \"X\" : \"O\";else return item;\n      });\n      const winner = checkWinCondition(boardCopy);\n\n      if (winner) {\n        setGameOver(true);\n\n        if (winner === \"X\") {\n          let {\n            xScore\n          } = scores;\n          xScore += 1;\n          setScores({ ...scores,\n            xScore\n          });\n        } else {\n          let {\n            oScore\n          } = scores;\n          oScore += 1;\n          setScores({ ...scores,\n            oScore\n          });\n        }\n      }\n\n      return [...boardCopy];\n    });\n    setXPlaying(!xPlaying);\n  };\n\n  const checkWinCondition = board => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n\n      if (board[x] === board[y] && board[y] === board[z]) {\n        return board[x];\n      }\n    }\n  };\n\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ScoreBoard, {\n      score_value: scores,\n      scoreBoard_xPlaying: xPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board_value: board,\n      board_onClick: gameOver ? resetBoard : updateBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      reset_onClick: resetBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iHO57+FMymKl5aNmBB6k83Y0OBQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Board","ScoreBoard","Reset","useState","App","WIN_CONDITIONS","board","setBoard","Array","fill","xPlaying","setXPlaying","scores","setScores","xScore","oScore","gameOver","setGameOver","updateBoard","boxID","boardCopy","map","item","index","winner","checkWinCondition","i","length","x","y","z","resetBoard"],"sources":["/home/thi-nguy/Documents/tic_tac_toe/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Board from \"./components/Board.jsx\";\nimport ScoreBoard from \"./components/ScoreBoard.jsx\";\nimport Reset from \"./components/Reset.jsx\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xPlaying, setXPlaying] = useState(true);\n  const [scores, setScores] = useState({ xScore: 0, oScore: 0 });\n  const [gameOver, setGameOver] = useState(false);\n\n  const updateBoard = (boxID) => {\n    setBoard((board) => {\n      const boardCopy = board.map((item, index) => {\n        if (index === boxID) return xPlaying === true ? \"X\" : \"O\";\n        else return item;\n      });\n      const winner = checkWinCondition(boardCopy);\n      if (winner) {\n        setGameOver(true);\n        if (winner === \"X\") {\n          let { xScore } = scores;\n          xScore += 1;\n          setScores({ ...scores, xScore });\n        } else {\n          let { oScore } = scores;\n          oScore += 1;\n          setScores({ ...scores, oScore });\n        }\n      }\n      return [...boardCopy];\n    });\n    setXPlaying(!xPlaying);\n  };\n\n  const checkWinCondition = (board) => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n\n      if (board[x] === board[y] && board[y] === board[z]) {\n        return board[x];\n      }\n    }\n  };\n\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\n  return (\n    <div className=\"App\">\n      <ScoreBoard score_value={scores} scoreBoard_xPlaying={xPlaying}/>\n      <Board board_value={board} board_onClick={gameOver ? resetBoard : updateBoard} />\n      <Reset reset_onClick={resetBoard} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}